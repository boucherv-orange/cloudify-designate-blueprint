tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml

inputs:
  agent_user:
    description: User name used when SSH-ing into the started machine

  image:
    description: Openstack image name or id to use for the new server

  flavor:
    description: Openstack flavor name or id to use for the new server

  external_network_name:
    type: string
    description: Network that will be the floating IP

node_templates:

  desginate_host:
    type: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        user: { get_input: agent_user }
      image: { get_input: image }
      flavor: { get_input: flavor }
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: designate_floatingip
      - type: cloudify.openstack.server_connected_to_security_group
        target: desginate_security_group
    interfaces:
      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                  CPUCollector: {}
                  MemoryCollector: {}
                  LoadAverageCollector: {}
                  DiskUsageCollector:
                    config:
                      devices: x?vd[a-z]+[0-9]*$
                  NetworkCollector: {}

  desginate:
    type: cloudify.nodes.SoftwareComponent
    relationships:
      - type: cloudify.relationships.contained_in
        target: desginate_host
    interfaces:
      cloudify.interfaces.lifecycle:
        create: scripts/install.sh

  desginate_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties: 
      security_group:
        name: desginate_sg
        description: DNS
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 53
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          port: 53
        - remote_ip_prefix: 0.0.0.0/0
          port: 9001

  designate_floatingip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

outputs:
  dns_endpoint:
    description: dns external endpoint
    value: {get_attribute: [designate_floatingip, floating_ip_address]}